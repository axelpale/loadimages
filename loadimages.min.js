(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.loadimages = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports = function loadimages(imgSrcs, then) {
  // Parameters
  //   imgSrcs
  //     array of image source paths OR single source path string.
  //   then(err, imgElements)
  //     Will be called after all the images are loaded. If string was given,
  //     imgElements is an Image instead of array of Images.

  var i, imgs, numberOfImages, onload, onloadsCalled, stringGiven,
    thereWasError, thereWasSuccess;

  if (typeof imgSrcs === 'string') {
    numberOfImages = 1;
    stringGiven = true;
    imgSrcs = [imgSrcs]; // Normalize
  } else {
    // Array of images
    numberOfImages = imgSrcs.length;
    stringGiven = false;
  }
  thereWasSuccess = false;
  thereWasError = false;

  imgs = [];

  onloadsCalled = 0;
  onload = function () {
    // Note:
    //   this = Image
    if (!thereWasError) {
      onloadsCalled += 1;
      var isFinalImage = (onloadsCalled === numberOfImages);
      if (isFinalImage) {
        thereWasSuccess = true;
        if (stringGiven) {
          then(null, imgs[0]);
        } else {
          then(null, imgs);
        }
      }
    }
  };

  onerror = function (errMsg) {
    // Note:
    //   this = Image

    // No errors after success.
    if (!thereWasSuccess) {
      thereWasError = true;
      then(errMsg, null);
    }

    // Prevent firing the default event handler
    // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers.onerror#Parameters
    return true;
  };

  for (i = 0; i < imgSrcs.length; i += 1) {
    imgs.push(new Image());
    imgs[i].onload = onload;
    imgs[i].onerror = onerror;
    imgs[i].src = imgSrcs[i];
  }
};

},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGxvYWRpbWFnZXMoaW1nU3JjcywgdGhlbikge1xuICAvLyBQYXJhbWV0ZXJzXG4gIC8vICAgaW1nU3Jjc1xuICAvLyAgICAgYXJyYXkgb2YgaW1hZ2Ugc291cmNlIHBhdGhzIE9SIHNpbmdsZSBzb3VyY2UgcGF0aCBzdHJpbmcuXG4gIC8vICAgdGhlbihlcnIsIGltZ0VsZW1lbnRzKVxuICAvLyAgICAgV2lsbCBiZSBjYWxsZWQgYWZ0ZXIgYWxsIHRoZSBpbWFnZXMgYXJlIGxvYWRlZC4gSWYgc3RyaW5nIHdhcyBnaXZlbixcbiAgLy8gICAgIGltZ0VsZW1lbnRzIGlzIGFuIEltYWdlIGluc3RlYWQgb2YgYXJyYXkgb2YgSW1hZ2VzLlxuXG4gIHZhciBpLCBpbWdzLCBudW1iZXJPZkltYWdlcywgb25sb2FkLCBvbmxvYWRzQ2FsbGVkLCBzdHJpbmdHaXZlbixcbiAgICB0aGVyZVdhc0Vycm9yLCB0aGVyZVdhc1N1Y2Nlc3M7XG5cbiAgaWYgKHR5cGVvZiBpbWdTcmNzID09PSAnc3RyaW5nJykge1xuICAgIG51bWJlck9mSW1hZ2VzID0gMTtcbiAgICBzdHJpbmdHaXZlbiA9IHRydWU7XG4gICAgaW1nU3JjcyA9IFtpbWdTcmNzXTsgLy8gTm9ybWFsaXplXG4gIH0gZWxzZSB7XG4gICAgLy8gQXJyYXkgb2YgaW1hZ2VzXG4gICAgbnVtYmVyT2ZJbWFnZXMgPSBpbWdTcmNzLmxlbmd0aDtcbiAgICBzdHJpbmdHaXZlbiA9IGZhbHNlO1xuICB9XG4gIHRoZXJlV2FzU3VjY2VzcyA9IGZhbHNlO1xuICB0aGVyZVdhc0Vycm9yID0gZmFsc2U7XG5cbiAgaW1ncyA9IFtdO1xuXG4gIG9ubG9hZHNDYWxsZWQgPSAwO1xuICBvbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy8gTm90ZTpcbiAgICAvLyAgIHRoaXMgPSBJbWFnZVxuICAgIGlmICghdGhlcmVXYXNFcnJvcikge1xuICAgICAgb25sb2Fkc0NhbGxlZCArPSAxO1xuICAgICAgdmFyIGlzRmluYWxJbWFnZSA9IChvbmxvYWRzQ2FsbGVkID09PSBudW1iZXJPZkltYWdlcyk7XG4gICAgICBpZiAoaXNGaW5hbEltYWdlKSB7XG4gICAgICAgIHRoZXJlV2FzU3VjY2VzcyA9IHRydWU7XG4gICAgICAgIGlmIChzdHJpbmdHaXZlbikge1xuICAgICAgICAgIHRoZW4obnVsbCwgaW1nc1swXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhlbihudWxsLCBpbWdzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBvbmVycm9yID0gZnVuY3Rpb24gKGVyck1zZykge1xuICAgIC8vIE5vdGU6XG4gICAgLy8gICB0aGlzID0gSW1hZ2VcblxuICAgIC8vIE5vIGVycm9ycyBhZnRlciBzdWNjZXNzLlxuICAgIGlmICghdGhlcmVXYXNTdWNjZXNzKSB7XG4gICAgICB0aGVyZVdhc0Vycm9yID0gdHJ1ZTtcbiAgICAgIHRoZW4oZXJyTXNnLCBudWxsKTtcbiAgICB9XG5cbiAgICAvLyBQcmV2ZW50IGZpcmluZyB0aGUgZGVmYXVsdCBldmVudCBoYW5kbGVyXG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMub25lcnJvciNQYXJhbWV0ZXJzXG4gICAgcmV0dXJuIHRydWU7XG4gIH07XG5cbiAgZm9yIChpID0gMDsgaSA8IGltZ1NyY3MubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpbWdzLnB1c2gobmV3IEltYWdlKCkpO1xuICAgIGltZ3NbaV0ub25sb2FkID0gb25sb2FkO1xuICAgIGltZ3NbaV0ub25lcnJvciA9IG9uZXJyb3I7XG4gICAgaW1nc1tpXS5zcmMgPSBpbWdTcmNzW2ldO1xuICB9XG59O1xuIl19
